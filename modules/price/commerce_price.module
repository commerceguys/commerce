<?php

use Drupal\Core\Entity\EntityInterface;
use Drupal\language\Entity\ConfigurableLanguage;
use Drupal\Core\Language\LanguageInterface;

/**
 * Implements hook_entity_operation().
 *
 * Adds the devel link for the commerce_currency entity type.
 */
function commerce_price_entity_operation(EntityInterface $entity) {
  $operations = array();
  if (!\Drupal::moduleHandler()->moduleExists('devel')) {
    return $operations;
  }

  $entity_type_id = $entity->getEntityTypeId();
  if (\Drupal::currentUser()->hasPermission('access devel information') && $entity_type_id == 'commerce_currency') {
    $operations['devel'] = array(
      'route_name' => 'entity.commerce_currency.devel',
      'route_parameters' => array($entity_type_id => $entity->id()),
      'title' => t('Devel'),
      'weight' => 15,
    );
  }

  return $operations;
}

/**
 * Implements hook_ENTITY_TYPE_insert() for 'configurable_language'.
 */
function commerce_price_configurable_language_insert(ConfigurableLanguage $language) {
  // Ignore 'und' and 'zxx'.
  if (!($language->getId() === LanguageInterface::LANGCODE_NOT_SPECIFIED || $language->getId() === LanguageInterface::LANGCODE_NOT_APPLICABLE)) {
    // Import currencies.
    $currency_importer = \Drupal::service('commerce_price.currency_importer');

    $currencies = \Drupal\commerce_price\Entity\CommerceCurrency::loadMultiple();
    $currency_importer->importCurrencyTranslations($currencies, array($language));

    // Import number formats.
    $format_importer = \Drupal::service('commerce_price.number_format_importer');
    $format_importer->importNumberFormats($language);
  }
}
