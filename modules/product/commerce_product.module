<?php

use Drupal\commerce_product\Entity\CommerceProductType;
use Drupal\Core\Entity\EntityInterface;
use Drupal\commerce_product\CommerceProductInterface;
use Drupal\Core\Url;
use Drupal\Core\Language\LanguageInterface;

/**
 * @file
 * Defines the core Commerce product entity, including the entity itself, the
 * bundle definitions (product types), and various API functions to manage
 * products and interact with them through forms and autocompletes.
 */

/**
 * Implements hook_entity_operation().
 *
 * Add devel link if this entity type is /commerce_product[_type]/.
 */
function commerce_product_entity_operation(EntityInterface $entity) {
  $operations = array();
  if (!\Drupal::moduleHandler()->moduleExists('devel')) {
    return $operations;
  }

  $entity_routes =
    array(
      'commerce_product' => 'commerce_product.devel',
      'commerce_product_type' => 'commerce_product.product_type_devel',
    );

  $entity_type_id = $entity->getEntityTypeId();
  if (\Drupal::currentUser()->hasPermission('access devel information') && in_array($entity_type_id, array_keys($entity_routes))) {
    $operations['devel'] = array(
      'route_name' => $entity_routes[$entity_type_id],
      'route_parameters' => array($entity_type_id => $entity->id()),
      'title' => t('Devel'),
      'weight' => 15,
    );
  }

  return $operations;
}

/**
 * Entity URI callback.
 *
 * @param \Drupal\node\NodeInterface $node
 *   A node entity.
 *
 * @return \Drupal\core\Url
 *   A Url object that provides a URL to the view page for $node.
 */
function commerce_product_uri(CommerceProductInterface $product) {
  return new Url('commerce_product.view', array(
    'commerce_product' => $product->id(),
  ));
}

/**
 * Implements hook_theme().
 */
function commerce_product_theme() {
  return array(
    'commerce_product_add_list' => array(
      'variables' => array('content' => NULL),
      'file' => 'commerce_product.pages.inc',
      'template' => 'commerce-product-add-list',
    ),
  );
}
